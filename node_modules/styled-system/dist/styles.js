'use strict';

exports.__esModule = true;
exports.buttonStyle = exports.colorStyle = exports.textStyle = exports.left = exports.bottom = exports.right = exports.top = exports.zIndex = exports.position = exports.backgroundRepeat = exports.backgroundPosition = exports.backgroundSize = exports.backgroundImage = exports.background = exports.opacity = exports.boxShadow = exports.borderRadius = exports.borderColor = exports.borders = exports.borderLeft = exports.borderBottom = exports.borderRight = exports.borderTop = exports.border = exports.gridTemplateRows = exports.gridTemplateColumns = exports.gridAutoRows = exports.gridAutoColumns = exports.gridAutoFlow = exports.gridRow = exports.gridColumn = exports.gridRowGap = exports.gridColumnGap = exports.gridGap = exports.order = exports.alignSelf = exports.justifySelf = exports.flex = exports.flexDirection = exports.flexBasis = exports.flexWrap = exports.justifyContent = exports.alignContent = exports.alignItems = exports.verticalAlign = exports.ratio = exports.ratioPadding = exports.size = exports.sizeHeight = exports.sizeWidth = exports.minHeight = exports.maxHeight = exports.height = exports.minWidth = exports.maxWidth = exports.display = exports.letterSpacing = exports.fontWeight = exports.lineHeight = exports.textAlign = exports.fontFamily = exports.color = exports.bgColor = exports.textColor = exports.fontSize = exports.width = exports.space = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _space = require('./space');

Object.defineProperty(exports, 'space', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_space).default;
  }
});

var _util = require('./util');

var _variant = require('./variant');

var _variant2 = _interopRequireDefault(_variant);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getWidth = function getWidth(n) {
  return !(0, _util.num)(n) || n > 1 ? (0, _util.px)(n) : n * 100 + '%';
};

var width = exports.width = (0, _util.style)({
  prop: 'width',
  transformValue: getWidth
});

var fontSize = exports.fontSize = (0, _util.style)({
  prop: 'fontSize',
  key: 'fontSizes',
  transformValue: _util.px,
  scale: [12, 14, 16, 20, 24, 32, 48, 64, 72]
});

var textColor = exports.textColor = (0, _util.style)({
  prop: 'color',
  key: 'colors'
});

var bgColor = exports.bgColor = (0, _util.style)({
  prop: 'bg',
  cssProperty: 'backgroundColor',
  key: 'colors'
});

var color = exports.color = (0, _util.compose)(textColor, bgColor);

// typography
var fontFamily = exports.fontFamily = (0, _util.style)({
  prop: 'fontFamily',
  key: 'fonts'
});

var textAlign = exports.textAlign = (0, _util.style)({
  prop: 'textAlign'
});

var lineHeight = exports.lineHeight = (0, _util.style)({
  prop: 'lineHeight',
  key: 'lineHeights'
});

var fontWeight = exports.fontWeight = (0, _util.style)({
  prop: 'fontWeight',
  key: 'fontWeights'
});

var letterSpacing = exports.letterSpacing = (0, _util.style)({
  prop: 'letterSpacing',
  key: 'letterSpacings',
  transformValue: _util.px
});

// layout
var display = exports.display = (0, _util.style)({
  prop: 'display'
});

var maxWidth = exports.maxWidth = (0, _util.style)({
  prop: 'maxWidth',
  key: 'maxWidths',
  transformValue: _util.px
});

var minWidth = exports.minWidth = (0, _util.style)({
  prop: 'minWidth',
  key: 'minWidths',
  transformValue: _util.px
});

var height = exports.height = (0, _util.style)({
  prop: 'height',
  key: 'heights',
  transformValue: _util.px
});

var maxHeight = exports.maxHeight = (0, _util.style)({
  prop: 'maxHeight',
  key: 'maxHeights',
  transformValue: _util.px
});

var minHeight = exports.minHeight = (0, _util.style)({
  prop: 'minHeight',
  key: 'minHeights',
  transformValue: _util.px
});

var sizeWidth = exports.sizeWidth = (0, _util.style)({
  prop: 'size',
  cssProperty: 'width',
  transformValue: _util.px
});

var sizeHeight = exports.sizeHeight = (0, _util.style)({
  prop: 'size',
  cssProperty: 'height',
  transformValue: _util.px
});

var size = exports.size = (0, _util.compose)(sizeHeight, sizeWidth);

var ratioPadding = exports.ratioPadding = (0, _util.style)({
  prop: 'ratio',
  cssProperty: 'paddingBottom',
  transformValue: function transformValue(n) {
    return n * 100 + '%';
  }
});

var ratio = exports.ratio = function ratio(props) {
  return props.ratio ? _extends({
    height: 0
  }, ratioPadding(props)) : null;
};
ratio.propTypes = _extends({}, ratioPadding.propTypes);

var verticalAlign = exports.verticalAlign = (0, _util.style)({
  prop: 'verticalAlign'
});

// flexbox
var alignItems = exports.alignItems = (0, _util.style)({
  prop: 'alignItems'
});

var alignContent = exports.alignContent = (0, _util.style)({
  prop: 'alignContent'
});

var justifyContent = exports.justifyContent = (0, _util.style)({
  prop: 'justifyContent'
});

var flexWrap = exports.flexWrap = (0, _util.style)({
  prop: 'flexWrap'
});

var flexBasis = exports.flexBasis = (0, _util.style)({
  prop: 'flexBasis',
  transformValue: getWidth
});

var flexDirection = exports.flexDirection = (0, _util.style)({
  prop: 'flexDirection'
});

var flex = exports.flex = (0, _util.style)({
  prop: 'flex'
});

var justifySelf = exports.justifySelf = (0, _util.style)({
  prop: 'justifySelf'
});

var alignSelf = exports.alignSelf = (0, _util.style)({
  prop: 'alignSelf'
});

var order = exports.order = (0, _util.style)({
  prop: 'order'
});

// grid
var gridGap = exports.gridGap = (0, _util.style)({
  prop: 'gridGap',
  transformValue: _util.px,
  key: 'space'
});

var gridColumnGap = exports.gridColumnGap = (0, _util.style)({
  prop: 'gridColumnGap',
  transformValue: _util.px,
  key: 'space'
});

var gridRowGap = exports.gridRowGap = (0, _util.style)({
  prop: 'gridRowGap',
  transformValue: _util.px,
  key: 'space'
});

var gridColumn = exports.gridColumn = (0, _util.style)({
  prop: 'gridColumn'
});

var gridRow = exports.gridRow = (0, _util.style)({
  prop: 'gridRow'
});

var gridAutoFlow = exports.gridAutoFlow = (0, _util.style)({
  prop: 'gridAutoFlow'
});

var gridAutoColumns = exports.gridAutoColumns = (0, _util.style)({
  prop: 'gridAutoColumns'
});

var gridAutoRows = exports.gridAutoRows = (0, _util.style)({
  prop: 'gridAutoRows'
});

var gridTemplateColumns = exports.gridTemplateColumns = (0, _util.style)({
  prop: 'gridTemplateColumns'
});

var gridTemplateRows = exports.gridTemplateRows = (0, _util.style)({
  prop: 'gridTemplateRows'
});

// borders
var getBorder = function getBorder(n) {
  return (0, _util.num)(n) && n > 0 ? n + 'px solid' : n;
};

var border = exports.border = (0, _util.style)({
  prop: 'border',
  key: 'borders',
  transformValue: getBorder
});

var borderTop = exports.borderTop = (0, _util.style)({
  prop: 'borderTop',
  key: 'borders',
  transformValue: getBorder
});

var borderRight = exports.borderRight = (0, _util.style)({
  prop: 'borderRight',
  key: 'borders',
  transformValue: getBorder
});

var borderBottom = exports.borderBottom = (0, _util.style)({
  prop: 'borderBottom',
  key: 'borders',
  transformValue: getBorder
});

var borderLeft = exports.borderLeft = (0, _util.style)({
  prop: 'borderLeft',
  key: 'borders',
  transformValue: getBorder
});

var borders = exports.borders = (0, _util.compose)(border, borderTop, borderRight, borderBottom, borderLeft);

var borderColor = exports.borderColor = (0, _util.style)({
  prop: 'borderColor',
  key: 'colors'
});

var borderRadius = exports.borderRadius = (0, _util.style)({
  prop: 'borderRadius',
  key: 'radii',
  transformValue: _util.px
});

var boxShadow = exports.boxShadow = (0, _util.style)({
  prop: 'boxShadow',
  key: 'shadows'
});

var opacity = exports.opacity = (0, _util.style)({
  prop: 'opacity'
});

// backgrounds
var background = exports.background = (0, _util.style)({
  prop: 'background'
});

var backgroundImage = exports.backgroundImage = (0, _util.style)({
  prop: 'backgroundImage'
});

var backgroundSize = exports.backgroundSize = (0, _util.style)({
  prop: 'backgroundSize'
});

var backgroundPosition = exports.backgroundPosition = (0, _util.style)({
  prop: 'backgroundPosition'
});

var backgroundRepeat = exports.backgroundRepeat = (0, _util.style)({
  prop: 'backgroundRepeat'
});

// position
var position = exports.position = (0, _util.style)({
  prop: 'position'
});

var zIndex = exports.zIndex = (0, _util.style)({
  prop: 'zIndex'
});

var top = exports.top = (0, _util.style)({
  prop: 'top',
  transformValue: _util.px
});

var right = exports.right = (0, _util.style)({
  prop: 'right',
  transformValue: _util.px
});

var bottom = exports.bottom = (0, _util.style)({
  prop: 'bottom',
  transformValue: _util.px
});

var left = exports.left = (0, _util.style)({
  prop: 'left',
  transformValue: _util.px
});

var textStyle = exports.textStyle = (0, _variant2.default)({
  prop: 'textStyle',
  key: 'textStyles'
});

var colorStyle = exports.colorStyle = (0, _variant2.default)({
  prop: 'colors',
  key: 'colorStyles'
});

var buttonStyle = exports.buttonStyle = (0, _variant2.default)({
  key: 'buttons'
});